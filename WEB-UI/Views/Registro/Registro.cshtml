@model DTO.UsuarioBase
@{
    ViewBag.Title = "";
    Layout = "../Shared/_Layout.cshtml";
}
@section Scripts {

}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="~/css/Registro.css" />

    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap" rel="stylesheet">
    <link href='https://unpkg.com/boxicons@2.1.1/css/boxicons.min.css' rel='stylesheet'>
    <link rel="stylesheet" href="https://unpkg.com/leaflet/dist/leaflet.css" />
    <script src="https://unpkg.com/leaflet/dist/leaflet.js"></script>
    <title>@ViewBag.Title</title>
</head>


<body>
    <div class="main-w3layouts wrapper">
        <div class="main-agileinfo">
            <div class="agileits-top">
                <h1>Crea tu cuenta</h1>
                <div class="input-group">
                    <div class="input-group-header">
                        <h2>Datos personales</h2>
                        <div class="file-upload">
                            <label for="photo">
                                <span>Subir foto</span>
                                <input type="file" id="photo" accept="image/*" onchange="previewImage(event)">
                            </label>
                        </div>
                    </div>
                    <div class="image-container">
                        <img src="#" alt="Imagen" id="preview">
                    </div>
                </div>

                @using (Html.BeginForm("Registro", "Registro", FormMethod.Post))
                {
                    @Html.AntiForgeryToken()

                    <div class="input-group">
                        <div>
                            @Html.TextBoxFor(model => model.Nombre, new { @class = "text", placeholder = "Nombres", required = "required" })
                        </div>
                        <div>
                            @Html.TextBoxFor(model => model.Apellidos, new { @class = "text", placeholder = "Apellidos", required = "required" })
                        </div>
                    </div>
                    <div class="input-group">
                        <div>
                            @Html.TextBoxFor(model => model.Telefono, new { @class = "text", placeholder = "Teléfono", required = "required" })
                        </div>
                        <div>
                            @Html.TextBoxFor(model => model.Correo, new { @class = "text", placeholder = "Correo", required = "required" })
                        </div>
                    </div>
                    <div class="input-group">
                        <div>
                            @Html.DropDownListFor(model => model.Sexo, new List<SelectListItem>
                        {
                        new SelectListItem { Text = "Masculino", Value = "male" },
                        new SelectListItem { Text = "Femenino", Value = "female" }
                        }, "Seleccione Sexo", new { @class = "text", required = "required" })
                        </div>
                        <div>
                            @Html.TextBoxFor(model => model.FechaNacimiento, new { @class = "text", placeholder = "Fecha de Nacimiento", required = "required", type = "date" })
                        </div>
                    </div>
                    <div class="input-group">
                        <input type="hidden" id="lat" name="latitud"> <!-- Campo oculto para guardar la latitud -->
                        <input type="hidden" id="lng" name="longitud"> <!-- Campo oculto para guardar la longitud -->
                        <div id="map" style="height: 300px;"></div>
                        <div class="coordinates-container">
                            <input type="text" id="coordinates" class="text" placeholder="Coordenadas" readonly>
                        </div>

                    </div>


                    <div class="input-group">
                        <hr class="divider-line">
                        <div class="security-info">
                            <h2>Seguridad de la cuenta</h2>
                            <p>Al menos debe contener de 8 a 12 caracteres.</p>
                        </div>
                        <div class="password-inputs">
                            @Html.PasswordFor(model => model.Contrasenna, new { @class = "text", placeholder = "Contraseña", required = "required" })
                            @Html.PasswordFor(model => model.Contrasenna, new { @class = "text", placeholder = "Confirmar Contraseña", required = "required" })
                        </div>
                    </div>



                    <div class="btn-container">
                        <hr class="divider-line">
                        <input type="submit" value="Registrarse" id="boton-enviar">
                    </div>

                }
            </div>
        </div>
    </div>

  
    <script>
        function previewImage(event) {
            var input = event.target;
            var preview = document.getElementById('preview');

            if (input.files && input.files[0]) {
                var reader = new FileReader();

                reader.onload = function (e) {
                    preview.src = e.target.result;
                    preview.style.display = 'block';
                };

                reader.readAsDataURL(input.files[0]);
            }
        }

        var map = L.map('map').setView([51.505, -0.09], 13); // Inicializa el mapa en una ubicación específica

        L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
            attribution: '&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors'
        }).addTo(map);

        var marker = L.marker([51.5, -0.09]).addTo(map); // Añade un marcador al mapa

        map.on('click', function (e) {
            var lat = e.latlng.lat.toFixed(6); // Obtiene la latitud y la redondea
            var lng = e.latlng.lng.toFixed(6); // Obtiene la longitud y la redondea
            var coordinates = lat + ', ' + lng; // Combina latitud y longitud en un solo formato
            document.getElementById('coordinates').value = coordinates; // Guarda las coordenadas en el campo de coordenadas
        });

    </script>
</body>
</html>